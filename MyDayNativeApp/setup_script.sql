-- App Logic Code Base Below

-- CREATE APPLICATION ROLE IF NOT EXISTS APP_PUBLIC;
CREATE APPLICATION ROLE IF NOT EXISTS APP_PUBLIC;
CREATE SCHEMA IF NOT EXISTS CORE;
GRANT USAGE ON SCHEMA CORE TO APPLICATION ROLE APP_PUBLIC;

CREATE SCHEMA IF NOT EXISTS HK;
GRANT USAGE ON SCHEMA HK TO APPLICATION ROLE APP_PUBLIC;


-- LOAD AND DISPLAY STREAMLIT APPLICATION
-- Providing both location and filename
CREATE OR REPLACE STREAMLIT CORE.STREAMLIT
  FROM '/streamlit'
  MAIN_FILE = '/streamlit_app.py';

GRANT USAGE ON STREAMLIT CORE.STREAMLIT TO APPLICATION ROLE APP_PUBLIC;



-- MAKE VIEWS AND DATA ACCESSIBLE TO THE ACCOUNT
CREATE VIEW IF NOT EXISTS HK.CARBS as SELECT * FROM HK_SHARED.CARBS;
CREATE VIEW IF NOT EXISTS HK.POP_AGG as SELECT * FROM HK_SHARED.POP_AGG;
CREATE VIEW IF NOT EXISTS HK.HEARTRATE AS SELECT * FROM HK_SHARED.HEARTRATE;
CREATE VIEW IF NOT EXISTS HK.RESTINGHEARTRATE AS SELECT * FROM HK_SHARED.RESTINGHEARTRATE;
CREATE VIEW IF NOT EXISTS HK.WALKINGHEARTAVG AS SELECT * FROM HK_SHARED.WALKINGHEARTAVG;
CREATE VIEW IF NOT EXISTS HK.HEARTRATESDNN AS SELECT * FROM HK_SHARED.HEARTRATESDNN;
CREATE VIEW IF NOT EXISTS HK.SLEEP AS SELECT * FROM HK_SHARED.SLEEP;

GRANT SELECT ON VIEW HK.CARBS TO APPLICATION ROLE APP_PUBLIC; -- the consumer can access
GRANT SELECT ON VIEW HK.POP_AGG TO APPLICATION ROLE APP_PUBLIC; -- the consumer can access
GRANT SELECT ON VIEW HK.RESTINGHEARTRATE TO APPLICATION ROLE APP_PUBLIC; -- the consumer can access
GRANT SELECT ON VIEW HK.HEARTRATE TO APPLICATION ROLE APP_PUBLIC; -- the consumer can access
GRANT SELECT ON VIEW HK.WALKINGHEARTAVG TO APPLICATION ROLE APP_PUBLIC; -- the consumer can access
GRANT SELECT ON VIEW HK.HEARTRATESDNN TO APPLICATION ROLE APP_PUBLIC; -- the consumer can access
GRANT SELECT ON VIEW HK.SLEEP TO APPLICATION ROLE APP_PUBLIC; -- the consumer can access



create or replace procedure CORE.CREATE_GPT_FN(integration_name string)
returns string
language sql
execute as owner
as
declare
  create_stmt varchar;
  grant_stmt varchar;
begin
   create_stmt := 'create or replace external function CORE.GPT(PROMPT STRING)
    returns VARIANT
    api_integration = '|| integration_name ||'
    as ''https://rti94a2n67.execute-api.us-west-2.amazonaws.com/dev/gpt'';';
  
  EXECUTE IMMEDIATE :create_stmt;

  grant_stmt := 'GRANT USAGE ON FUNCTION CORE.GPT(STRING) TO APPLICATION ROLE APP_PUBLIC;';
  EXECUTE IMMEDIATE :grant_stmt;

  RETURN 'DONE';

END;

GRANT USAGE ON PROCEDURE CORE.CREATE_GPT_FN(string) TO APPLICATION ROLE APP_PUBLIC;


